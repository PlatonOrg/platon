# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserPrefs {
  levels: [String!]!
  topics: [String!]!
}

type User {
  id: UUID!
  createdAt: Date!
  updatedAt: Date
  role: UserRoles!
  username: String!
  active: Boolean!
  firstName: String
  lastName: String
  email: String
  lastLogin: Date
  firstLogin: Date
  hasPassword: Boolean
  prefs: UserPrefs!
}

"""
The `UUID` scalar type represents UUID values as specified by [RFC 4122](https://tools.ietf.org/html/rfc4122).
"""
scalar UUID

enum UserRoles {
  admin
  teacher
  student
  demo
}

type Notification {
  id: UUID!
  createdAt: Date!
  updatedAt: Date
  readAt: Date
  data: JSON!
  user: User!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type NotificationChange {
  unreadCount: Float!
  newNotification: Notification
}

scalar Date

type Query {
  users(filters: UserFiltersInput): [User!]!
  user(input: String!): User!
  unreadNotificationsCount: Int!
  notifications(filters: NotificationFiltersInput): [Notification!]!
}

input UserFiltersInput {
  roles: [UserRoles!]
  groups: [UUID!]
  lmses: [UUID!]
  search: String
  offset: Int
  limit: Int
  order: UserOrderings
  direction: OrderingDirections
}

enum UserOrderings {
  NAME
  CREATED_AT
  UPDATED_AT
}

enum OrderingDirections {
  ASC
  DESC
}

input NotificationFiltersInput {
  unread: Boolean
  offset: Int
  limit: Int
}

type Mutation {
  markAsRead(id: UUID!): Notification!
  markAsUnread(id: UUID!): Notification!
  markAllAsRead: Boolean!
  deleteNotification(id: UUID!): Boolean!
  deleteAllNotifications: Boolean!
}

type Subscription {
  onChangeNotifications: NotificationChange!
}
