// Documentation disponible ici : #docs/main/doc/programing/exercise/langage


// Choix de l'environnement d'exécution node ou python
sandbox = "node"

// Définition des champs de réponse : #docs/components/

input = :wc-input-box
input.type = "number"
input.placeholder = "Entrez votre réponse ici"

inputSolution = :wc-input-box
inputSolution.type = "number"
inputSolution.disabled = true
inputSolution.placeholder = "Solution"

// Affichage de documents théoriques : #docs/main/doc/programing/exercise/theories

theories = [
  { title: "Lien vers une ressource externe", url: "https://google.com" },
  { title: "Lien vers une ressource interne", url: @copyurl readme.md }
]

// Affichage d'aides : #docs/main/doc/programing/exercise/hints

hint = ["Aide 1", "Aide 2"]

// Construction, Affichage et Évaluation : #docs/main/doc/programing/exercise/workflow

max = 10

builder==
a = Math.round(Math.random() * max)
b = Math.round(Math.random() * max)
inputSolution.value = a + b
==

grader==
grade = 0
feedback.type = "error"
feedback.content = "Mauvaise réponse"
if (input.value === inputSolution.value) {
  grade = 100
  feedback.type = "success"
  feedback.content = "Bonne réponse"
}
==

title==
Addition aléatoire
==

statement ==
Combien font {{a}} + {{b}} ?
==

form==
{{input}}
==

solution==
{{inputSolution}}
==
